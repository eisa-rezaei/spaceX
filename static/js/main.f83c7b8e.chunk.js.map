{"version":3,"sources":["components/screenSizes.js","components/Loading/style.js","components/Loading/index.jsx","components/Layout/style.js","components/Layout/index.jsx","App.jsx","serviceWorkerRegistration.js","index.jsx"],"names":["size","device","mobileS","mobileM","mobileL","tablet","laptop","laptopL","desktop","desktopL","rotation","keyframes","StLoadingContainer","styled","section","Loading","StLayoutContainer","div","GlobalStyle","createGlobalStyle","Layout","children","RocketPage","lazy","Ticket","App","fallback","path","element","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","queryClient","QueryClient","ReactDOM","render","StrictMode","client","initialIsOpen","position","document","getElementById","URL","process","href","origin","addEventListener","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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","file":"static/js/main.f83c7b8e.chunk.js","sourcesContent":["const size = {\n  mobileS: \"320px\",\n  mobileM: \"375px\",\n  mobileL: \"475px\",\n  tablet: \"768px\",\n  laptop: \"1024px\",\n  laptopL: \"1440px\",\n  desktop: \"2560px\",\n};\n\nexport const device = {\n  mobileS: `(min-width: ${size.mobileS})`,\n  mobileM: `(min-width: ${size.mobileM})`,\n  mobileL: `(min-width: ${size.mobileL})`,\n  tablet: `(min-width: ${size.tablet})`,\n  laptop: `(min-width: ${size.laptop})`,\n  laptopL: `(min-width: ${size.laptopL})`,\n  desktop: `(min-width: ${size.desktop})`,\n  desktopL: `(min-width: ${size.desktop})`,\n};\n","import styled, { keyframes } from \"styled-components\";\n\nconst rotation = keyframes`\n    0% {\n      transform: rotate(0deg);\n      border-top: 3px solid #4e4cd5;\n    }\n    100% {\n      transform: rotate(360deg);\n      border-top: 3px solid #4e4cd5;\n    }\n`;\n\nexport const StLoadingContainer = styled.section`\n  width: 100%;\n  min-height: 100vh;\n  color: #fff;\n  display: flex;\n  background-color: linear-gradient(\n    180deg,\n    rgba(0, 0, 0, 0.3) 0%,\n    rgba(0, 0, 0, 0) 100%\n  );\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  & span {\n    width: 100px;\n    height: 100px;\n    margin-bottom: 10px;\n    border-radius: 50%;\n    border: 2px solid #bbccbb;\n    border-top: 3px solid #1a1c45;\n    animation: ${rotation} infinite 1.5s ease;\n  }\n  & p {\n    margin-top: 15px;\n  }\n`;\n","import React from \"react\";\nimport { StLoadingContainer } from \"./style\";\n\nconst Loading = () => {\n  return (\n    <StLoadingContainer>\n      <span />\n      <h1>Loading ...</h1>\n      <p>SpaceX Lunches Website</p>\n    </StLoadingContainer>\n  );\n};\n\nexport default Loading;\n","import { device } from \"components/screenSizes\";\nimport styled, { createGlobalStyle } from \"styled-components\";\n\nexport const StLayoutContainer = styled.div`\n  width: 100%;\n  min-height: 100vh;\n  display: flex;\n  position: relative;\n  overflow: hidden;\n  align-items: center;\n  flex-direction: column;\n  justify-content: center;\n`;\n\nexport const GlobalStyle = createGlobalStyle`\n*,\n::after,\n::before{\nmargin: 0;\npadding: 0;\nbox-sizing: border-box;\n\n}\nbody{\n    user-select: none;\n    line-height: 1;\n    background-color: #14152c;\n    font-family: 'Lato', sans-serif;\n\n}\n::-webkit-scrollbar {\n  width: 0px;\n}\n\nli{\n    list-style: none;\n}\na {\n    text-decoration: none;\n    color: inherit;\n}\ninput{\n    outline: none;\n    border: none;\n    line-height: 1;\n    font-family: inherit;\n}\nbutton {\n    background-color: inherit;\n    border: none;\n    line-height: 1;\n    font-family: inherit;\n}\n\n@media ${device.tablet} {\n::-webkit-scrollbar {\n  width: 10px;\n}\n::-webkit-scrollbar-track {\n  background: #000000; \n}\n::-webkit-scrollbar-thumb {\n  background: #888; \n  border-radius: 3px;\n  :hover {\n  background: #aaa; \n}\n}\n}\n`;\n","import React from \"react\";\nimport { GlobalStyle, StLayoutContainer } from \"./style\";\n\nconst Layout = ({ children }) => {\n  return (\n    <StLayoutContainer>\n      {children}\n      <GlobalStyle />\n    </StLayoutContainer>\n  );\n};\n\nexport default Layout;\n","import { Suspense, lazy } from \"react\";\nimport { Route, Routes, HashRouter as Router } from \"react-router-dom\";\nimport Layout from \"./components/Layout\";\nimport Loading from \"./components/Loading\";\n\nconst RocketPage = lazy(() => import(\"./components/Rocket\"));\nconst Ticket = lazy(() => import(\"./components/Ticket\"));\n\nfunction App() {\n  return (\n    <Router>\n      <Suspense fallback={<Loading />}>\n        <Layout>\n          <Routes>\n            <Route path=\"/\" element={<RocketPage />} />\n            <Route path=\"/:siteNameParam\" element={<RocketPage />} />\n          </Routes>\n          <Ticket />\n        </Layout>\n      </Suspense>\n    </Router>\n  );\n}\n\nexport default App;\n","const isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    window.location.hostname === \"[::1]\" ||\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        checkValidServiceWorker(swUrl, config);\n\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://cra.link/PWA\"\n          );\n        });\n      } else {\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://cra.link/PWA.\"\n              );\n\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              console.log(\"Content is cached for offline use.\");\n\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  fetch(swUrl, {\n    headers: { \"Service-Worker\": \"script\" },\n  })\n    .then((response) => {\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { QueryClient, QueryClientProvider } from \"react-query\";\nimport { ReactQueryDevtools } from \"react-query/devtools\";\nimport App from \"./App\";\nimport * as serviceWorkerRegistration from \"serviceWorkerRegistration\";\nconst queryClient = new QueryClient();\n\nReactDOM.render(\n  <React.StrictMode>\n    <QueryClientProvider client={queryClient}>\n      <App />\n      <ReactQueryDevtools initialIsOpen={false} position=\"bottom-right\" />\n    </QueryClientProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\nserviceWorkerRegistration.register();\n"],"sourceRoot":""}